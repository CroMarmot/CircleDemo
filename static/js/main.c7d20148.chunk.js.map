{"version":3,"sources":["Cfg/Level.js","Components/MatterJsGame.js","App.js","reportWebVitals.js","index.js"],"names":["Level","color","map","item","index","lvl","radius","score","Engine","Matter","Render","World","Bodies","Mouse","MouseConstraint","Events","BallProvider","createBall","Math","floor","random","addBody","world","x","y","ball","circleIns","circle","restitution","render","fillStyle","customData","add","MatterJsGame","props","state","scene","createRef","nextBall","randomNext","engine","create","width","height","borderWidth","element","this","current","options","wireframes","rectangle","isStatic","mouseConstraint","mouse","canvas","constraint","stiffness","visible","mouseDownCb","_","throttle","event","mousedownPosition","setState","trailing","on","e","pairs","forEach","coll","bodyA","lvlA","bodyB","newXY","position","remove","run","ref","React","Component","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c7d20148.chunk.js","sourcesContent":["export const Level = [\n    {color: `#0000ff`},\n    {color: `#00ff00`},\n    {color: `#00ffff`},\n    {color: `#ff0000`},\n    {color: `#ff00ff`},\n    {color: `#ffff00`},\n    {color: `#ffffff`},\n    {color: `#00007f`},\n    {color: `#007f00`},\n    {color: `#007f7f`},\n    {color: `#7f0000`},\n    {color: `#7f007f`},\n    {color: `#7f7f00`},\n    {color: `#7f7f7f`},\n    {color: `#000000`},\n].map((item, index) => ({\n    lvl: index,\n    radius: (index + 1) * 10,\n    score: (index+1)*3,\n    color: item.color\n}));\n","import React from \"react\";\nimport Matter from \"matter-js\";\nimport {createRef} from \"react\";\nimport {Level} from \"../Cfg/Level\";\nimport _ from \"lodash\";\n\nconst Engine = Matter.Engine;\nconst Render = Matter.Render;\nconst World = Matter.World;\nconst Bodies = Matter.Bodies;\nconst Mouse = Matter.Mouse;\nconst MouseConstraint = Matter.MouseConstraint;\nconst Events = Matter.Events;\n\nclass BallProvider {\n    static createBall(lvl) {\n        return {\n            lvl,\n        }\n    }\n\n    static randomNext() {\n        return BallProvider.createBall(Math.floor(5 * Math.random()))\n    }\n\n}\n\nfunction addBody(world, lvl, x, y) {\n    const ball = BallProvider.createBall(lvl);\n    const circleIns = Bodies.circle(x, y, Level[lvl].radius, {\n        restitution: 0.7,\n        render: {\n            fillStyle: Level[lvl].color\n        },\n        customData: {\n            lvl: ball.lvl\n        }\n    });\n    World.add(world, circleIns);\n}\n\nexport class MatterJsGame extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            scene: createRef(),\n            nextBall: BallProvider.randomNext(),\n            score: 0\n        };\n    }\n\n    componentDidMount() {\n        const engine = Engine.create({\n            // positionIterations: 20\n        });\n\n        const width = 300;\n        const height = 700;\n        const borderWidth = 100;\n\n        const render = Render.create({\n            element: this.state.scene.current,\n            engine,\n            options: {\n                width,\n                height,\n                wireframes: false\n            }\n        });\n\n        World.add(engine.world, [\n            // walls\n            // center x,center y,width,height\n            Bodies.rectangle(-borderWidth / 2, height / 2, borderWidth, height, {isStatic: true}),\n            Bodies.rectangle(width + borderWidth / 2, height / 2, borderWidth, height, {isStatic: true}),\n            Bodies.rectangle(width / 2, height + borderWidth / 2, width, borderWidth, {isStatic: true}),\n        ]);\n\n        // add mouse control\n        const mouseConstraint = MouseConstraint.create(engine, {\n            mouse: Mouse.create(render.canvas),\n            constraint: {\n                stiffness: 0,\n                render: {\n                    visible: false\n                }\n            }\n        });\n\n\n        World.add(engine.world, mouseConstraint);\n\n        const mouseDownCb = _.throttle((event) => {\n            addBody(engine.world, this.state.nextBall.lvl, event.mouse.mousedownPosition.x, 50);\n            this.setState({\n                nextBall: BallProvider.randomNext()\n            });\n        }, 500, {trailing: false});\n\n        Matter.Events.on(mouseConstraint, \"mousedown\", mouseDownCb);\n\n        Events.on(engine, 'collisionEnd', (e) => {\n            e.pairs.forEach(coll => {\n                if (!coll.bodyA.customData) {\n                    return;\n                }\n                const lvlA = coll.bodyA.customData.lvl;\n                const lvlB = coll.bodyB.customData.lvl;\n                if (lvlA === lvlB) {\n                    const newXY = coll.bodyA.position.y > coll.bodyB.position.y ? coll.bodyA.position : coll.bodyB.position;\n                    World.remove(engine.world, coll.bodyA);\n                    World.remove(engine.world, coll.bodyB);\n                    addBody(engine.world, lvlA + 1, newXY.x, newXY.y);\n                    this.setState({\n                        score: this.state.score + Level[lvlA].score\n                    })\n                }\n            })\n        });\n\n        Engine.run(engine);\n        Render.run(render);\n    }\n\n    render() {\n        return <div>\n            <div ref={this.state.scene}/>\n            <div>Next Ball:{this.state.nextBall.lvl} Score: {this.state.score}</div>\n        </div>;\n    }\n}\n","import './App.css';\nimport {MatterJsGame} from \"./Components/MatterJsGame\";\n\nfunction App() {\n    /* <Stage width={100} height={200}>\n         <GameCircle x={10} y={10} lvl={0}/>\n         <GameCircle x={30} y={10} lvl={1}/>\n         <GameCircle x={50} y={50} lvl={2}/>\n         <GameCircle x={30} y={90} lvl={3}/>\n     </Stage> */\n  return (\n    <div className=\"App\">\n        <MatterJsGame />\n   </div>\n  );\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}